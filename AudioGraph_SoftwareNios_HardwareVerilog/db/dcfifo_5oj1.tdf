--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone II" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=128 LPM_SHOWAHEAD="ON" LPM_WIDTH=32 LPM_WIDTH_R=32 LPM_WIDTHU=7 LPM_WIDTHU_R=7 MAXIMIZE_SPEED=7 OVERFLOW_CHECKING="OFF" RDSYNC_DELAYPIPE=5 UNDERFLOW_CHECKING="OFF" USE_EAB="ON" WRSYNC_DELAYPIPE=5 data q rdclk rdempty rdreq wrclk wrreq wrusedw CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone II" LOW_POWER_MODE="AUTO" lpm_hint="MAXIMIZE_SPEED=7" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 13.0 cbx_a_gray2bin 2013:06:12:18:03:43:SJ cbx_a_graycounter 2013:06:12:18:03:43:SJ cbx_altdpram 2013:06:12:18:03:43:SJ cbx_altsyncram 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_dcfifo 2013:06:12:18:03:43:SJ cbx_fifo_common 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_lpm_mux 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_scfifo 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_stratixiii 2013:06:12:18:03:43:SJ cbx_stratixv 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_gray2bin_bcb (gray[7..0])
RETURNS ( bin[7..0]);
FUNCTION a_graycounter_f86 (aclr, clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION a_graycounter_41c (clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION a_graycounter_31c (clock, cnt_en)
RETURNS ( q[7..0]);
FUNCTION altsyncram_7ku (address_a[6..0], address_b[6..0], addressstall_b, clock0, clock1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);
FUNCTION dffpipe_c2e (clock, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_7u7 (clock, d[7..0])
RETURNS ( q[7..0]);
FUNCTION dffpipe_0v8 (clock, d[7..0])
RETURNS ( q[7..0]);
FUNCTION alt_synch_pipe_8u7 (clock, d[7..0])
RETURNS ( q[7..0]);
FUNCTION cmpr_o16 (dataa[3..0], datab[3..0])
RETURNS ( aeb);
FUNCTION mux_1u7 (data[1..0], sel[0..0])
RETURNS ( result[0..0]);

--synthesis_resources = lut 13 M4K 1 reg 119 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=s102;{-to p0addr} POWER_UP_LEVEL=LOW;{-to rdemp_eq_comp_lsb_aeb} POWER_UP_LEVEL=HIGH;{-to rdemp_eq_comp_msb_aeb} POWER_UP_LEVEL=HIGH;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe_2v8:dffpipe20|dffe21a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_2v8:dffpipe20|dffe21a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe_1v8:dffpipe16|dffe17a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_1v8:dffpipe16|dffe17a* """;

SUBDESIGN dcfifo_5oj1
( 
	data[31..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrreq	:	input;
	wrusedw[6..0]	:	output;
) 
VARIABLE 
	wrptr_g_gray2bin : a_gray2bin_bcb;
	ws_dgrp_gray2bin : a_gray2bin_bcb;
	rdptr_g1p : a_graycounter_f86;
	wrptr_g1p : a_graycounter_41c;
	wrptr_gp : a_graycounter_31c;
	fifo_ram : altsyncram_7ku;
	delayed_wrptr_g[7..0] : dffe;
	p0addr : dffe
		WITH (
			power_up = "low"
		);
	rdemp_eq_comp_lsb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdemp_eq_comp_msb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdptr_g[7..0] : dffe;
	rs_dgwp_reg[7..0] : dffe;
	wrfull_eq_comp_lsb_mux_reg : dffe;
	wrfull_eq_comp_msb_mux_reg : dffe;
	ws_dgrp_reg[7..0] : dffe;
	rdaclr : dffpipe_c2e;
	rs_dgwp : alt_synch_pipe_7u7;
	ws_brp : dffpipe_0v8;
	ws_bwp : dffpipe_0v8;
	ws_dgrp : alt_synch_pipe_8u7;
	wrusedw_sub_dataa[7..0]	:	WIRE;
	wrusedw_sub_datab[7..0]	:	WIRE;
	wrusedw_sub_result[7..0]	:	WIRE;
	rdempty_eq_comp1_lsb : cmpr_o16;
	rdempty_eq_comp1_msb : cmpr_o16;
	rdempty_eq_comp_lsb : cmpr_o16;
	rdempty_eq_comp_msb : cmpr_o16;
	wrfull_eq_comp1_lsb : cmpr_o16;
	wrfull_eq_comp1_msb : cmpr_o16;
	wrfull_eq_comp_lsb : cmpr_o16;
	wrfull_eq_comp_msb : cmpr_o16;
	rdemp_eq_comp_lsb_mux : mux_1u7;
	rdemp_eq_comp_msb_mux : mux_1u7;
	wrfull_eq_comp_lsb_mux : mux_1u7;
	wrfull_eq_comp_msb_mux : mux_1u7;
	int_rdempty	: WIRE;
	ram_address_a[6..0]	: WIRE;
	ram_address_b[6..0]	: WIRE;
	rdcnt_addr_ena	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_g1s[7..0]	: WIRE;
	wrptr_gs[7..0]	: WIRE;

BEGIN 
	wrptr_g_gray2bin.gray[7..0] = wrptr_gp.q[7..0];
	ws_dgrp_gray2bin.gray[7..0] = ws_dgrp_reg[7..0].q;
	rdptr_g1p.aclr = (! rdaclr.q[]);
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = rdcnt_addr_ena;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	wrptr_gp.clock = wrclk;
	wrptr_gp.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! rdcnt_addr_ena);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].d = wrptr_gp.q[];
	p0addr.clk = rdclk;
	p0addr.clrn = rdaclr.q[];
	p0addr.d = B"1";
	rdemp_eq_comp_lsb_aeb.clk = rdclk;
	rdemp_eq_comp_lsb_aeb.d = rdemp_eq_comp_lsb_mux.result[];
	rdemp_eq_comp_msb_aeb.clk = rdclk;
	rdemp_eq_comp_msb_aeb.d = rdemp_eq_comp_msb_mux.result[];
	rdptr_g[].clk = rdclk;
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	rs_dgwp_reg[].clk = rdclk;
	rs_dgwp_reg[].d = rs_dgwp.q[];
	wrfull_eq_comp_lsb_mux_reg.clk = wrclk;
	wrfull_eq_comp_lsb_mux_reg.d = wrfull_eq_comp_lsb_mux.result[];
	wrfull_eq_comp_msb_mux_reg.clk = wrclk;
	wrfull_eq_comp_msb_mux_reg.d = wrfull_eq_comp_msb_mux.result[];
	ws_dgrp_reg[].clk = wrclk;
	ws_dgrp_reg[].d = ws_dgrp.q[];
	rdaclr.clock = (! rdclk);
	rdaclr.d[] = B"1";
	rs_dgwp.clock = rdclk;
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_brp.clock = wrclk;
	ws_brp.d[] = ws_dgrp_gray2bin.bin[];
	ws_bwp.clock = wrclk;
	ws_bwp.d[] = wrptr_g_gray2bin.bin[];
	ws_dgrp.clock = wrclk;
	ws_dgrp.d[] = rdptr_g[].q;
	wrusedw_sub_result[] = wrusedw_sub_dataa[] - wrusedw_sub_datab[];
	wrusedw_sub_dataa[] = ws_bwp.q[];
	wrusedw_sub_datab[] = ws_brp.q[];
	rdempty_eq_comp1_lsb.dataa[3..0] = rs_dgwp.q[3..0];
	rdempty_eq_comp1_lsb.datab[3..0] = rdptr_g1p.q[3..0];
	rdempty_eq_comp1_msb.dataa[3..0] = rs_dgwp.q[7..4];
	rdempty_eq_comp1_msb.datab[3..0] = rdptr_g1p.q[7..4];
	rdempty_eq_comp_lsb.dataa[3..0] = rs_dgwp.q[3..0];
	rdempty_eq_comp_lsb.datab[3..0] = rdptr_g[3..0].q;
	rdempty_eq_comp_msb.dataa[3..0] = rs_dgwp.q[7..4];
	rdempty_eq_comp_msb.datab[3..0] = rdptr_g[7..4].q;
	wrfull_eq_comp1_lsb.dataa[3..0] = ws_dgrp.q[3..0];
	wrfull_eq_comp1_lsb.datab[3..0] = wrptr_g1s[3..0];
	wrfull_eq_comp1_msb.dataa[3..0] = ws_dgrp.q[7..4];
	wrfull_eq_comp1_msb.datab[3..0] = wrptr_g1s[7..4];
	wrfull_eq_comp_lsb.dataa[3..0] = ws_dgrp.q[3..0];
	wrfull_eq_comp_lsb.datab[3..0] = wrptr_gs[3..0];
	wrfull_eq_comp_msb.dataa[3..0] = ws_dgrp.q[7..4];
	wrfull_eq_comp_msb.datab[3..0] = wrptr_gs[7..4];
	rdemp_eq_comp_lsb_mux.data[] = ( rdempty_eq_comp1_lsb.aeb, rdempty_eq_comp_lsb.aeb);
	rdemp_eq_comp_lsb_mux.sel[] = valid_rdreq;
	rdemp_eq_comp_msb_mux.data[] = ( rdempty_eq_comp1_msb.aeb, rdempty_eq_comp_msb.aeb);
	rdemp_eq_comp_msb_mux.sel[] = valid_rdreq;
	wrfull_eq_comp_lsb_mux.data[] = ( wrfull_eq_comp1_lsb.aeb, wrfull_eq_comp_lsb.aeb);
	wrfull_eq_comp_lsb_mux.sel[] = valid_wrreq;
	wrfull_eq_comp_msb_mux.data[] = ( wrfull_eq_comp1_msb.aeb, wrfull_eq_comp_msb.aeb);
	wrfull_eq_comp_msb_mux.sel[] = valid_wrreq;
	int_rdempty = (rdemp_eq_comp_lsb_aeb.q & rdemp_eq_comp_msb_aeb.q);
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_gp.q[7..7] $ wrptr_gp.q[6..6]), wrptr_gp.q[5..0]);
	ram_address_b[] = ( (rdptr_g1p.q[7..7] $ rdptr_g1p.q[6..6]), rdptr_g1p.q[5..0]);
	rdcnt_addr_ena = (valid_rdreq # (! p0addr.q));
	rdempty = int_rdempty;
	valid_rdreq = rdreq;
	valid_wrreq = wrreq;
	wrptr_g1s[] = ( (! wrptr_g1p.q[7..7]), (! wrptr_g1p.q[6..6]), wrptr_g1p.q[5..0]);
	wrptr_gs[] = ( (! wrptr_gp.q[7..7]), (! wrptr_gp.q[6..6]), wrptr_gp.q[5..0]);
	wrusedw[] = ( wrusedw_sub_result[6..0]);
END;
--VALID FILE
